{"ast":null,"code":"// ag-grid-enterprise v20.2.0\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ag_grid_community_1 = require(\"ag-grid-community\");\n\nvar stylesheet_1 = require(\"./styles/stylesheet\");\n\nvar convertLegacyType = function convertLegacyType(type) {\n  var t = type.charAt(0).toLowerCase();\n  return t === 's' ? 'inlineStr' : t;\n};\n\nvar cellFactory = {\n  getTemplate: function getTemplate(config) {\n    var ref = config.ref,\n        data = config.data,\n        styleId = config.styleId;\n    var type = data.type,\n        value = data.value;\n    var convertedType = type;\n\n    if (type.charAt(0) === type.charAt(0).toUpperCase()) {\n      convertedType = convertLegacyType(type);\n    }\n\n    var obj = {\n      name: 'c',\n      properties: {\n        rawMap: {\n          r: ref,\n          t: convertedType === 'empty' ? undefined : convertedType,\n          s: styleId ? stylesheet_1.getStyleId(styleId) : undefined\n        }\n      }\n    };\n    var children;\n\n    if (convertedType === 'inlineStr') {\n      children = [{\n        name: 'is',\n        children: [{\n          name: 't',\n          textNode: ag_grid_community_1._.escape(ag_grid_community_1._.utf8_encode(value))\n        }]\n      }];\n    } else {\n      children = [{\n        name: 'v',\n        textNode: value\n      }];\n    }\n\n    return ag_grid_community_1._.assign({}, obj, {\n      children: children\n    });\n  }\n};\nexports.default = cellFactory;","map":null,"metadata":{},"sourceType":"script"}