{"ast":null,"code":"// ag-grid-enterprise v20.2.0\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar main_1 = require(\"ag-grid-community/main\");\n\nvar baseDropZonePanel_1 = require(\"../dropZone/baseDropZonePanel\");\n\nvar ValuesDropZonePanel =\n/** @class */\nfunction (_super) {\n  __extends(ValuesDropZonePanel, _super);\n\n  function ValuesDropZonePanel(horizontal) {\n    return _super.call(this, horizontal, true, 'values') || this;\n  }\n\n  ValuesDropZonePanel.prototype.passBeansUp = function () {\n    _super.prototype.setBeans.call(this, {\n      gridOptionsWrapper: this.gridOptionsWrapper,\n      eventService: this.eventService,\n      context: this.getContext(),\n      loggerFactory: this.loggerFactory,\n      dragAndDropService: this.dragAndDropService\n    });\n\n    var localeTextFunc = this.gridOptionsWrapper.getLocaleTextFunc();\n    var emptyMessage = localeTextFunc('valueColumnsEmptyMessage', 'Drag here to aggregate');\n    var title = localeTextFunc('values', 'Values');\n\n    _super.prototype.init.call(this, {\n      dragAndDropIcon: main_1.DragAndDropService.ICON_AGGREGATE,\n      icon: main_1._.createIconNoSpan('valuePanel', this.gridOptionsWrapper, null),\n      emptyMessage: emptyMessage,\n      title: title\n    });\n\n    this.addDestroyableEventListener(this.eventService, main_1.Events.EVENT_COLUMN_VALUE_CHANGED, this.refreshGui.bind(this));\n  };\n\n  ValuesDropZonePanel.prototype.getIconName = function () {\n    return this.isPotentialDndColumns() ? main_1.DragAndDropService.ICON_AGGREGATE : main_1.DragAndDropService.ICON_NOT_ALLOWED;\n  };\n\n  ValuesDropZonePanel.prototype.isColumnDroppable = function (column) {\n    if (this.gridOptionsWrapper.isFunctionsReadOnly()) {\n      return false;\n    } // we never allow grouping of secondary columns\n\n\n    if (!column.isPrimary()) {\n      return false;\n    }\n\n    var columnValue = column.isAllowValue();\n    var columnNotValue = !column.isValueActive();\n    return columnValue && columnNotValue;\n  };\n\n  ValuesDropZonePanel.prototype.updateColumns = function (columns) {\n    if (this.gridOptionsWrapper.isFunctionsPassive()) {\n      var event_1 = {\n        type: main_1.Events.EVENT_COLUMN_VALUE_CHANGE_REQUEST,\n        columns: columns,\n        api: this.gridApi,\n        columnApi: this.columnApi\n      };\n      this.eventService.dispatchEvent(event_1);\n    } else {\n      this.columnController.setValueColumns(columns, \"toolPanelUi\");\n    }\n  };\n\n  ValuesDropZonePanel.prototype.getExistingColumns = function () {\n    return this.columnController.getValueColumns();\n  };\n\n  __decorate([main_1.Autowired('columnController'), __metadata(\"design:type\", main_1.ColumnController)], ValuesDropZonePanel.prototype, \"columnController\", void 0);\n\n  __decorate([main_1.Autowired('eventService'), __metadata(\"design:type\", main_1.EventService)], ValuesDropZonePanel.prototype, \"eventService\", void 0);\n\n  __decorate([main_1.Autowired('gridOptionsWrapper'), __metadata(\"design:type\", main_1.GridOptionsWrapper)], ValuesDropZonePanel.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([main_1.Autowired('loggerFactory'), __metadata(\"design:type\", main_1.LoggerFactory)], ValuesDropZonePanel.prototype, \"loggerFactory\", void 0);\n\n  __decorate([main_1.Autowired('dragAndDropService'), __metadata(\"design:type\", main_1.DragAndDropService)], ValuesDropZonePanel.prototype, \"dragAndDropService\", void 0);\n\n  __decorate([main_1.Autowired('columnApi'), __metadata(\"design:type\", main_1.ColumnApi)], ValuesDropZonePanel.prototype, \"columnApi\", void 0);\n\n  __decorate([main_1.Autowired('gridApi'), __metadata(\"design:type\", main_1.GridApi)], ValuesDropZonePanel.prototype, \"gridApi\", void 0);\n\n  __decorate([main_1.PostConstruct, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], ValuesDropZonePanel.prototype, \"passBeansUp\", null);\n\n  return ValuesDropZonePanel;\n}(baseDropZonePanel_1.BaseDropZonePanel);\n\nexports.ValuesDropZonePanel = ValuesDropZonePanel;","map":null,"metadata":{},"sourceType":"script"}