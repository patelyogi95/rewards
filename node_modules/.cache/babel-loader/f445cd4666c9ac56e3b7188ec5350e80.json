{"ast":null,"code":"// ag-grid-enterprise v20.2.0\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ag_grid_community_1 = require(\"ag-grid-community\");\n\nvar DetailCellRenderer =\n/** @class */\nfunction (_super) {\n  __extends(DetailCellRenderer, _super);\n\n  function DetailCellRenderer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DetailCellRenderer.prototype.init = function (params) {\n    var _this = this;\n\n    this.rowId = params.node.id;\n    this.masterGridApi = params.api;\n    this.selectAndSetTemplate(params);\n\n    if (ag_grid_community_1._.exists(this.eDetailGrid)) {\n      this.addThemeToDetailGrid();\n      this.createDetailsGrid(params);\n      this.registerDetailWithMaster(params.node);\n      this.loadRowData(params);\n      window.setTimeout(function () {\n        // ensure detail grid api still exists (grid may be destroyed when async call tries to set data)\n        if (_this.detailGridOptions.api) {\n          _this.detailGridOptions.api.doLayout();\n        }\n      }, 0);\n    } else {\n      console.warn('ag-Grid: reference to eDetailGrid was missing from the details template. ' + 'Please add ref=\"eDetailGrid\" to the template.');\n    }\n  };\n\n  DetailCellRenderer.prototype.addThemeToDetailGrid = function () {\n    // this is needed by environment service of the child grid, the class needs to be on\n    // the grid div itself - the browser's CSS on the other hand just inherits from the parent grid theme.\n    var theme = this.environment.getTheme();\n\n    if (theme) {\n      ag_grid_community_1._.addCssClass(this.eDetailGrid, theme);\n    }\n  };\n\n  DetailCellRenderer.prototype.registerDetailWithMaster = function (rowNode) {\n    var _this = this;\n\n    var gridInfo = {\n      id: this.rowId,\n      api: this.detailGridOptions.api,\n      columnApi: this.detailGridOptions.columnApi\n    }; // register with api\n\n    this.masterGridApi.addDetailGridInfo(this.rowId, gridInfo); // register with node\n\n    rowNode.detailGridInfo = gridInfo;\n    this.addDestroyFunc(function () {\n      _this.masterGridApi.removeDetailGridInfo(_this.rowId); // unregister from api\n\n\n      rowNode.detailGridInfo = null; // unregister from node\n    });\n  };\n\n  DetailCellRenderer.prototype.selectAndSetTemplate = function (params) {\n    var paramsAny = params;\n\n    if (ag_grid_community_1._.missing(paramsAny.template)) {\n      // use default template\n      this.setTemplate(DetailCellRenderer.TEMPLATE);\n    } else {\n      // use user provided template\n      if (typeof paramsAny.template === 'string') {\n        this.setTemplate(paramsAny.template);\n      } else if (typeof paramsAny.template === 'function') {\n        var templateFunc = paramsAny.template;\n        var template = templateFunc(params);\n        this.setTemplate(template);\n      } else {\n        console.warn('ag-Grid: detailCellRendererParams.template should be function or string');\n        this.setTemplate(DetailCellRenderer.TEMPLATE);\n      }\n    }\n  };\n\n  DetailCellRenderer.prototype.createDetailsGrid = function (params) {\n    // we clone the detail grid options, as otherwise it would be shared\n    // across many instances, and that would be a problem because we set\n    // api and columnApi into gridOptions\n    var _this = this;\n\n    var gridOptions = params.detailGridOptions;\n\n    if (ag_grid_community_1._.missing(gridOptions)) {\n      console.warn('ag-Grid: could not find detail grid options for master detail, ' + 'please set gridOptions.detailCellRendererParams.detailGridOptions');\n    } // IMPORTANT - gridOptions must be cloned\n\n\n    this.detailGridOptions = ag_grid_community_1._.cloneObject(gridOptions); // tslint:disable-next-line\n\n    new ag_grid_community_1.Grid(this.eDetailGrid, this.detailGridOptions, {\n      $scope: params.$scope,\n      $compile: params.$compile,\n      seedBeanInstances: {\n        // a temporary fix for AG-1574\n        // AG-1715 raised to do a wider ranging refactor to improve this\n        agGridReact: params.agGridReact,\n        // AG-1716 - directly related to AG-1574 and AG-1715\n        frameworkComponentWrapper: params.frameworkComponentWrapper\n      }\n    });\n    this.addDestroyFunc(function () {\n      if (_this.detailGridOptions.api) {\n        _this.detailGridOptions.api.destroy();\n      }\n    });\n  };\n\n  DetailCellRenderer.prototype.loadRowData = function (params) {\n    var userFunc = params.getDetailRowData;\n\n    if (!userFunc) {\n      console.warn('ag-Grid: could not find getDetailRowData for master / detail, ' + 'please set gridOptions.detailCellRendererParams.getDetailRowData');\n      return;\n    }\n\n    var funcParams = {\n      node: params.node,\n      data: params.data,\n      successCallback: this.setRowData.bind(this)\n    };\n    userFunc(funcParams);\n  };\n\n  DetailCellRenderer.prototype.setRowData = function (rowData) {\n    // ensure detail grid api still exists (grid may be destroyed when async call tries to set data)\n    if (this.detailGridOptions.api) {\n      this.detailGridOptions.api.setRowData(rowData);\n    }\n  };\n\n  DetailCellRenderer.TEMPLATE = \"<div class=\\\"ag-details-row\\\">\\n            <div ref=\\\"eDetailGrid\\\" class=\\\"ag-details-grid\\\"/>\\n        </div>\";\n\n  __decorate([ag_grid_community_1.RefSelector('eDetailGrid'), __metadata(\"design:type\", HTMLElement)], DetailCellRenderer.prototype, \"eDetailGrid\", void 0);\n\n  __decorate([ag_grid_community_1.Autowired('gridOptionsWrapper'), __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)], DetailCellRenderer.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([ag_grid_community_1.Autowired('environment'), __metadata(\"design:type\", ag_grid_community_1.Environment)], DetailCellRenderer.prototype, \"environment\", void 0);\n\n  return DetailCellRenderer;\n}(ag_grid_community_1.Component);\n\nexports.DetailCellRenderer = DetailCellRenderer;","map":null,"metadata":{},"sourceType":"script"}