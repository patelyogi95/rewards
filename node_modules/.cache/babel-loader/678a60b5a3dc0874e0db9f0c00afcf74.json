{"ast":null,"code":"// ag-grid-enterprise v20.2.0\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ag_grid_community_1 = require(\"ag-grid-community\");\n\nvar SideBarButtonsComp =\n/** @class */\nfunction (_super) {\n  __extends(SideBarButtonsComp, _super);\n\n  function SideBarButtonsComp() {\n    var _this = _super.call(this, SideBarButtonsComp.TEMPLATE) || this;\n\n    _this.buttonComps = [];\n    return _this;\n  }\n\n  SideBarButtonsComp.prototype.setToolPanelDefs = function (toolPanelDefs) {\n    toolPanelDefs.forEach(this.addButtonComp.bind(this));\n  };\n\n  SideBarButtonsComp.prototype.setActiveButton = function (id) {\n    this.buttonComps.forEach(function (comp) {\n      comp.setSelected(id === comp.getToolPanelId());\n    });\n  };\n\n  SideBarButtonsComp.prototype.addButtonComp = function (def) {\n    var _this = this;\n\n    var buttonComp = new SideBarButtonComp(def);\n    this.getContext().wireBean(buttonComp);\n    this.buttonComps.push(buttonComp);\n    this.getGui().appendChild(buttonComp.getGui());\n    buttonComp.addEventListener(SideBarButtonComp.EVENT_TOGGLE_BUTTON_CLICKED, function () {\n      _this.dispatchEvent({\n        type: SideBarButtonsComp.EVENT_SIDE_BAR_BUTTON_CLICKED,\n        toolPanelId: def.id\n      });\n    });\n  };\n\n  SideBarButtonsComp.prototype.clearButtons = function () {\n    if (this.buttonComps) {\n      this.buttonComps.forEach(function (comp) {\n        return comp.destroy();\n      });\n    }\n\n    ag_grid_community_1._.clearElement(this.getGui());\n\n    this.buttonComps.length = 0;\n  };\n\n  SideBarButtonsComp.prototype.destroy = function () {\n    this.clearButtons();\n\n    _super.prototype.destroy.call(this);\n  };\n\n  SideBarButtonsComp.EVENT_SIDE_BAR_BUTTON_CLICKED = 'sideBarButtonClicked';\n  SideBarButtonsComp.TEMPLATE = \"<div class=\\\"ag-side-buttons\\\"></div>\";\n\n  __decorate([ag_grid_community_1.Autowired(\"gridOptionsWrapper\"), __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)], SideBarButtonsComp.prototype, \"gridOptionsWrapper\", void 0);\n\n  return SideBarButtonsComp;\n}(ag_grid_community_1.Component);\n\nexports.SideBarButtonsComp = SideBarButtonsComp;\n\nvar SideBarButtonComp =\n/** @class */\nfunction (_super) {\n  __extends(SideBarButtonComp, _super);\n\n  function SideBarButtonComp(toolPanelDef) {\n    var _this = _super.call(this) || this;\n\n    _this.toolPanelDef = toolPanelDef;\n    return _this;\n  }\n\n  SideBarButtonComp.prototype.getToolPanelId = function () {\n    return this.toolPanelDef.id;\n  };\n\n  SideBarButtonComp.prototype.postConstruct = function () {\n    var template = this.createTemplate();\n    this.setTemplate(template);\n    this.addDestroyableEventListener(this.eToggleButton, 'click', this.onButtonPressed.bind(this));\n  };\n\n  SideBarButtonComp.prototype.createTemplate = function () {\n    var translate = this.gridOptionsWrapper.getLocaleTextFunc();\n    var def = this.toolPanelDef;\n    var label = translate(def.labelKey, def.labelDefault);\n    var res = \"<div class=\\\"ag-side-button\\\">\\n                <button type=\\\"button\\\" ref=\\\"eToggleButton\\\">\\n                    <div>\\n                        <span class=\\\"ag-icon-\" + def.iconKey + \"\\\"></span>\\n                    </div>\\n                    <span>\" + label + \"</span>\\n                </button>\\n            </div>\";\n    return res;\n  };\n\n  SideBarButtonComp.prototype.onButtonPressed = function () {\n    this.dispatchEvent({\n      type: SideBarButtonComp.EVENT_TOGGLE_BUTTON_CLICKED\n    });\n  };\n\n  SideBarButtonComp.prototype.setSelected = function (selected) {\n    this.addOrRemoveCssClass('ag-selected', selected);\n  };\n\n  SideBarButtonComp.EVENT_TOGGLE_BUTTON_CLICKED = 'toggleButtonClicked';\n\n  __decorate([ag_grid_community_1.Autowired(\"gridOptionsWrapper\"), __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)], SideBarButtonComp.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([ag_grid_community_1.RefSelector('eToggleButton'), __metadata(\"design:type\", HTMLButtonElement)], SideBarButtonComp.prototype, \"eToggleButton\", void 0);\n\n  __decorate([ag_grid_community_1.PostConstruct, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], SideBarButtonComp.prototype, \"postConstruct\", null);\n\n  return SideBarButtonComp;\n}(ag_grid_community_1.Component);","map":null,"metadata":{},"sourceType":"script"}