{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Owner\\\\Downloads\\\\grid-assignment\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Owner\\\\Downloads\\\\grid-assignment\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Owner\\\\Downloads\\\\grid-assignment\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Owner\\\\Downloads\\\\grid-assignment\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Owner\\\\Downloads\\\\grid-assignment\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Downloads\\\\grid-assignment\\\\src\\\\home\\\\Container.js\";\n\n/* eslint-disable no-console */\n\n/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport ConatinerContext from '../context/containerContext';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { message } from 'antd';\n\nvar Home =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n    _this.state = {\n      purchase: [],\n      loading: false,\n      totalPoints: 0,\n      dates: []\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"getDaysArray\",\n    value: function getDaysArray(start, end) {\n      for (var arr = [], dt = start; dt <= end; dt.setDate(dt.getDate() + 1)) {\n        arr.push(new Date(dt));\n      }\n\n      return arr;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var last3MonthDates = this.getDaysArray(new Date('2019-05-01'), new Date('2019-08-01'));\n      this.setState({\n        dates: last3MonthDates\n      });\n    }\n  }, {\n    key: \"updatePurchase\",\n    value: function updatePurchase() {\n      var _this2 = this;\n\n      // u can write axios call also here\n      var httpRequest = new XMLHttpRequest();\n      httpRequest.open('GET', 'https://raw.githubusercontent.com/ag-grid/ag-grid/master/packages/ag-grid-docs/src/olympicWinners.json');\n      httpRequest.send();\n\n      httpRequest.onreadystatechange = function () {\n        if (httpRequest.readyState === 4 && httpRequest.status === 200) {\n          var obj = JSON.parse(httpRequest.responseText);\n          var mockData = obj.map(function (i, index) {\n            // getting some mock data from dummy api call\n            // using XHR call\n            i.purchase = Math.floor(Math.random() * 90 + 10) + 20;\n            i.shopping = 'Market shopping';\n            i.year = 2019;\n            i.date = _this2.state.dates[index];\n            i.shopping = index % 2 === 0 ? 'Fashion Clothing' : 'Household Items';\n            return i;\n          });\n\n          _this2.setState({\n            // mock data for 90 days\n            purchase: mockData.slice(0, 90),\n            loading: false\n          });\n        }\n      };\n    }\n  }, {\n    key: \"calculatePoints\",\n    value: function calculatePoints() {\n      // do the calculation here\n      var sum = 0;\n      this.state.purchase.map(function (i) {\n        if (i.purchase > 100) {\n          sum = sum + 2 * i.purchase - 100;\n        }\n\n        if (i.purchase > 50) {\n          sum = sum + 1 * i.purchase - 50;\n        }\n      });\n      message.success('Assigning Random Points');\n      message.success(\"Total Points Collected is \".concat(sum));\n    }\n  }, {\n    key: \"resetPoints\",\n    value: function resetPoints() {\n      this.setState({\n        purchase: [],\n        loading: false,\n        totalPoints: 0\n      });\n    }\n  }, {\n    key: \"setLoading\",\n    value: function setLoading() {\n      this.setState({\n        loading: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConatinerContext.Provider, {\n        value: {\n          state: this.state,\n          resetPoints: this.resetPoints.bind(this),\n          updatePurchase: this.updatePurchase.bind(this),\n          setLoading: this.setLoading.bind(this),\n          calculatePoints: this.calculatePoints.bind(this)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.props.children);\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Owner/Downloads/grid-assignment/src/home/Container.js"],"names":["React","ConatinerContext","message","Home","props","state","purchase","loading","totalPoints","dates","start","end","arr","dt","setDate","getDate","push","Date","last3MonthDates","getDaysArray","setState","httpRequest","XMLHttpRequest","open","send","onreadystatechange","readyState","status","obj","JSON","parse","responseText","mockData","map","i","index","Math","floor","random","shopping","year","date","slice","sum","success","resetPoints","bind","updatePurchase","setLoading","calculatePoints","children","Component"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport ConatinerContext from '../context/containerContext';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { message } from 'antd';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      purchase: [],\n      loading: false,\n      totalPoints: 0,\n      dates: [],\n    };\n  }\n  getDaysArray(start, end) {\n    for (var arr = [], dt = start; dt <= end; dt.setDate(dt.getDate() + 1)) {\n      arr.push(new Date(dt));\n    }\n    return arr;\n  }\n  componentDidMount() {\n    const last3MonthDates = this.getDaysArray(\n      new Date('2019-05-01'),\n      new Date('2019-08-01'),\n    );\n    this.setState({\n      dates: last3MonthDates,\n    });\n  }\n  updatePurchase() {\n    // u can write axios call also here\n    const httpRequest = new XMLHttpRequest();\n    httpRequest.open(\n      'GET',\n      'https://raw.githubusercontent.com/ag-grid/ag-grid/master/packages/ag-grid-docs/src/olympicWinners.json',\n    );\n    httpRequest.send();\n    httpRequest.onreadystatechange = () => {\n      if (httpRequest.readyState === 4 && httpRequest.status === 200) {\n        const obj = JSON.parse(httpRequest.responseText);\n        const mockData = obj.map((i, index) => {\n          // getting some mock data from dummy api call\n          // using XHR call\n          i.purchase = Math.floor(Math.random() * 90 + 10) + 20;\n          i.shopping = 'Market shopping';\n          i.year = 2019;\n          i.date = this.state.dates[index];\n          i.shopping = index % 2 === 0 ? 'Fashion Clothing' : 'Household Items';\n          return i;\n        });\n        this.setState({\n          // mock data for 90 days\n          purchase: mockData.slice(0, 90),\n          loading: false,\n        });\n      }\n    };\n  }\n  calculatePoints() {\n    // do the calculation here\n    let sum = 0;\n    this.state.purchase.map(i => {\n      if (i.purchase > 100) {\n        sum = sum + 2 * i.purchase - 100;\n      }\n      if (i.purchase > 50) {\n        sum = sum + 1 * i.purchase - 50;\n      }\n    });\n    message.success('Assigning Random Points');\n    message.success(`Total Points Collected is ${sum}`);\n  }\n  resetPoints() {\n    this.setState({\n      purchase: [],\n      loading: false,\n      totalPoints: 0,\n    });\n  }\n  setLoading() {\n    this.setState({\n      loading: true,\n    });\n  }\n  render() {\n    return (\n      <ConatinerContext.Provider\n        value={{\n          state: this.state,\n          resetPoints: this.resetPoints.bind(this),\n          updatePurchase: this.updatePurchase.bind(this),\n          setLoading: this.setLoading.bind(this),\n          calculatePoints: this.calculatePoints.bind(this),\n        }}\n      >\n        {this.props.children}\n      </ConatinerContext.Provider>\n    );\n  }\n}\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}