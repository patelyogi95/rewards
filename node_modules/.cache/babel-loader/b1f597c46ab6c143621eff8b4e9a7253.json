{"ast":null,"code":"// ag-grid-enterprise v20.2.0\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ag_grid_community_1 = require(\"ag-grid-community\");\n\nvar nameValueComp_1 = require(\"./nameValueComp\");\n\nvar FilteredRowsComp =\n/** @class */\nfunction (_super) {\n  __extends(FilteredRowsComp, _super);\n\n  function FilteredRowsComp() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  FilteredRowsComp.prototype.postConstruct = function () {\n    this.setLabel('filteredRows', 'Filtered'); // this component is only really useful with client side row model\n\n    if (this.gridApi.getModel().getType() !== 'clientSide') {\n      console.warn(\"ag-Grid: agFilteredRowCountComponent should only be used with the client side row model.\");\n      return;\n    }\n\n    this.addCssClass('ag-status-panel');\n    this.addCssClass('ag-status-panel-filtered-row-count');\n    this.setVisible(true);\n    var listener = this.onDataChanged.bind(this);\n    this.eventService.addEventListener(ag_grid_community_1.Events.EVENT_MODEL_UPDATED, listener);\n  };\n\n  FilteredRowsComp.prototype.onDataChanged = function () {\n    var totalRowCountValue = this.getTotalRowCountValue();\n    var filteredRowCountValue = this.getFilteredRowCountValue();\n    this.setValue(filteredRowCountValue);\n    this.setVisible(totalRowCountValue !== filteredRowCountValue);\n  };\n\n  FilteredRowsComp.prototype.getTotalRowCountValue = function () {\n    var totalRowCount = 0;\n    this.gridApi.forEachNode(function (node) {\n      return totalRowCount += 1;\n    });\n    return totalRowCount;\n  };\n\n  FilteredRowsComp.prototype.getFilteredRowCountValue = function () {\n    var filteredRowCount = 0;\n    this.gridApi.forEachNodeAfterFilter(function (node) {\n      if (!node.group) {\n        filteredRowCount += 1;\n      }\n    });\n    return filteredRowCount;\n  };\n\n  FilteredRowsComp.prototype.init = function () {};\n\n  __decorate([ag_grid_community_1.Autowired('eventService'), __metadata(\"design:type\", ag_grid_community_1.EventService)], FilteredRowsComp.prototype, \"eventService\", void 0);\n\n  __decorate([ag_grid_community_1.Autowired('gridApi'), __metadata(\"design:type\", ag_grid_community_1.GridApi)], FilteredRowsComp.prototype, \"gridApi\", void 0);\n\n  __decorate([ag_grid_community_1.PostConstruct, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], FilteredRowsComp.prototype, \"postConstruct\", null);\n\n  return FilteredRowsComp;\n}(nameValueComp_1.NameValueComp);\n\nexports.FilteredRowsComp = FilteredRowsComp;","map":null,"metadata":{},"sourceType":"script"}